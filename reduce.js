// / 4. Вам дан массив с числами [3,13,54,15,335, 39]. Найдите разность чисел, которые больше 10.

//  5. Вам дан массив с строками ['Аскар', 'Баяман', 'Калмамат']. Сложите все
//   строки и выведите длину результата.

//  Объединение элементов массива с определенным разделителем
//  Используйте метод reduce() для объединения элементов массива с определенным разделителем.
//  let items = ["apple", "banana", "cherry"];

//  Сортировка строк в лексикографическом порядке
//  Используйте метод sort(), чтобы отсортировать массив строк в лексикографическом порядке (по алфавиту).
//  let fruits = ["banana", "apple", "cherry", "date"];
// console.log(fruits.sort((el) => {
//     return el
// }));

//  Сортировка строк в обратном порядке
//  Используйте метод sort() и функцию сравнения для отсортировки массива строк в обратном порядке
//  let fruits = ["banana", "apple", "cherry", "date"];

//  Проверка наличия элемента больше определенного порога
//  Используйте метод some(), чтобы проверить, есть ли в массиве хотя бы один элемент больше 15
//  let numbers = [10, 5, 8, 22, 3];

// Проверка наличия строк, содержащих определенную букву
// Используйте метод some(), чтобы проверить, есть ли
//  в массиве строк хотя бы одна строка, содержащая определенную букву “a”
// let words = ["apple", "banana", "cherry", "date"];

// Поиск элемента в массиве
// Создайте массив чисел и используйте метод find(),
//  чтобы найти первый элемент, который больше  25 определенного порогового значения.
// let numbers = [10, 20, 30, 40, 50];

// Поиск элемента с использованием функции-коллбэка
// Создайте массив строк и используйте метод find(), чтобы найти
//  первую строку, которая начинается с "b" определенной буквы.
// let words = ["apple", "banana", "cherry", "date"];

// Поиск элемента по индексу
// Создайте массив чисел и используйте метод
// find() для нахождения элемента по его индексу 2
// let numbers = [10, 20, 30, 40, 50];