// 1  Дан массив ['a', 'b', 'c']. Добавьте ему в конец элементы 1, 2, 3.
// function a ['a', 'b', 'c']
// a.

// 2 Даны два массива: [1, 2, 3] и [4, 5, 6]. Объедините их вместе.
// 3 Дан массив [1, 2, 3]. Добавьте ему в конец элементы 4, 5, 6.
// 4 Дан массив [1, 2, 3]. Добавьте ему в начало элементы 4, 5, 6.
// let a = [1, 2, 3]
// a.push(4,5,6)
// console.log(a);

// 5 Дан массив ['js', 'css', 'jq']. Выведите на экран первый элемент.
// let a = ['js', 'css', 'jq']
// console.log(a.slice(0,1));

// 6 Дан массив ['js', 'css', 'jq']. Выведите на экран последний элемент.
// let a = ['js', 'css', 'jq']
// console.log(a.slice(-1));

// 7  Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в
// новый элементы [1, 2, 3].
// let a = [1, 2, 3, 4, 5]
// console.log(a.slice(0,3));
  
// 8  Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в новый
// элементы [4, 5].
// let a =  [1, 2, 3, 4, 5]
// console.log(a.slice(3))
// ;

// 9  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice преобразуйте
// массив в [1, 4, 5].
// let a = [1, 2, 3, 4, 5]
// a.splice(1,2)
// console.log(a);

// 10  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice запишите в
// новый массив элементы [2, 3, 4].
// let a = [1, 2, 3, 4,5]
// console.log(a.splice(1,3,))

// 11  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice сделайте из него
// массив [1, 2, 3, 'a', 'b', 'c', 4, 5].
// let a = [1, 2, 3, 4, 5]
// a.splice(3,0,"a","b","c")
// console.log(a);

// 12  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice
// сделайте из него массив [1, 'a', 'b', 2, 3, 4, 'c', 5, 'e'].
// let a = [1, 2, 3, 4, 5]
// a.splice(1,0,"a","b") 
// a.splice(6,0,"c") 
// a.splice(8,0,"e")
// console.log(a);
 

// 1.Добавление и удаление элементов в конце массива:
// Создайте массив с несколькими элементами. Используйте push для добавления
// нового элемента в конец массива, а затем pop, чтобы удалить последний
// элемент. Выведите массив после каждой операции.
// let a = [1 ,2,3,4,5,6]
// a.push(45,45)
// a.pop()
// console.log(a)
// 2.Добавление и удаление элементов в начале массива:
// Создайте массив с несколькими элементами. Используйте unshift для
// добавления нового элемента в начало массива, а затем shift, чтобы удалить
// первый элемент. Выведите массив после каждой операции.
// let a = [1 ,2,3,4,5,6]
// a.unshift(45,45)
// a.shift()
// console.log(a)
// 3.Разделение массива:
// Создайте массив с несколькими элементами. Используйте pop для удаления
// последнего элемента, а затем shift, чтобы удалить первый элемент, и
// выведите новый массив.
// let a = [1,2,3,4,5]
// a.shift()
// a.pop()
// console.log(a)

// 4.Создать массив
// let fruits = ['яблоко', 'апельсин', 'груша'];
// Добавить элемент в конец массива; // ['яблоко', 'апельсин', 'груша', 'банан']
// let a = ['яблоко', 'апельсин', 'груша']
// a.push('банан')
// console.log(a);

// 5.Удалить последний элемент массива
// ['яблоко', 'апельсин', 'груша']
// let a = ['яблоко', 'апельсин', 'груша']
// a.pop()
// console.log(a);

// 6.Объединить два массива с помощью push // [1, 2, 3, 4, 5, 6]
// let arr1 = [1, 2, 3];
// let arr2 = [4, 5, 6];
// arr1.push(...arr2)
// console.log(arr1);




// 7.let numbers = [1, 2, 3, 4, 5];
// Удалить последний элемент и добавить новый элемент в начало массива
// [0, 1, 2, 3, 4]
// let numbers = [1, 2, 3, 4, 5];
// numbers.pop()
// numbers.unshift(0)
// console.log(numbers);



// 8.let queue = [];
// Добавить элементы в очередь
// ['третий', 'второй', 'первый']
// let queue = ['третий', 'второй', 'первый']
// queue.splice(0,1,'первый') 
// queue.splice(1,4,'второй')
// queue.splice(2,5,'третий')
// console.log(queue);

// 9.Удалить элемент из очереди (первый добавленный)
// ['третий', 'второй']
// let a = ['третий', 'второй']
// a.unshift('первый')
// a.shift()
// a.shift()
// a.shift()

// console.log(a);


// 10.let numbers = [10, 20, 30, 40, 50];
// Удалить один элемент, начиная с индекса 2
// [10, 20, 40, 50]
// Удалить три элемента, начиная с индекса 1
// [10]
// let numbers = [10, 20, 30, 40, 50];
// numbers.splice(2,1)
// numbers.splice(1)
// console.log(numbers);


// 11.let colors = ["красный", "зеленый", "синий"];
// Вставить 'желтый' на место индекса 1, удалить 0 элементов
// ['красный', 'желтый', 'зеленый', 'синий']
// let colors = ["красный", "зеленый", "синий"]
// colors.splice(1,0,'желтый')
// console.log(colors);

// 12.let colors = ["красный", "зеленый", "синий"];
// Заменить 'зеленый' на 'фиолетовый'
// ['красный', 'желтый', 'фиолетовый', 'синий']
// let colors = ["красный", "зеленый", "синий"]
// colors.splice(2,0,"фиолетовый")
// colors.splice(1,1,'желтый')
// console.log(colors);

// 13.let cars = ["Мерседес", "БМВ", "Ауди"];
// Добавить два элемента ('Фольксваген' и 'Тойота') начиная с индекса 1
// ['Мерседес', 'Фольксваген', 'Тойота', 'БМВ', 'Ауди']
// let cars = ["Мерседес", "БМВ", "Ауди"]
// cars.splice(1,0,'Фольксваген','Тойота' )
// console.log(cars);

// function compare(a, b) {
//     if (a > b) return 1;  // эгерде a bден чоң болсо, 1 кайтарат
//     if (a == b) return 0;  // эгерде a жана b бирдей болсо, 0 кайтарат
//     if (a < b) return -1;  // эгерде a bден кичине болсо, -1 кайтарат
//   }console.log(compare(23,56));
  

// 14.let colors = ["красный", "желтый", "синий"];
// Заменить один элемент на другой, начиная с индекса 0
// ['фиолетовый', 'желтый', 'синий']
// let colors = ["красный", "желтый", "синий"]
// colors.splice(0,1,'фиолетовый')
// console.log(colors);

// 15.let fruits = ["яблоко", "груша", "апельсин", "банан"];
// Удалить два элемента начиная с индекса 1 и сохранить их в новом массиве
// ['груша', 'апельсин']
// let fruits = ["яблоко", "груша", "апельсин", "банан"]
// fruits.pop()
// fruits.shift()
// console.log(fruits);
// let arr = ["I", "go", "home"];
// arr.splice(1, 1); // Индекс 1деги "go" элементин жок кылат

// alert( arr ); // ["I", "home"]
// alert( arr.length ); // 2
// let a =      
// let arr = ['apple', 'banana', 'orange', 'banana'];

// console.log(arr.indexOf('banana')); // 1 (башка index болмокчу, биринчи жолу табылган индекс)
// console.log(arr.indexOf('banana', 2));










// Во всех задачах используйте только методы map, filter.

// 1. Вам дан массив: [315, 64, 75, 43, 65, 63].Найдите сумму каждого числа.
// 2. Вам дан массив: ['Аскар', 'Баяман', 'Калмамат']. Создайте функцию, изменяющую букву а в каждом имени на я и выведите в консоль.
// 3. Вам дан массив: ['Аскар', 'Баяман', 'Калмамат']. Создайте функцию, которая выводит только те имена, где есть буква к и выведите в консоль.

// 4. Вам дан массив: [4, 54, 49]. Сделайте из него массив, состоящий из квадратов этих чисел.
// let arr = [4, 54, 49]
// console.log(arr.map((el) => {
//     return el ** 2
// }));

// 5. Вам дан массив [3134, 4, -143, -245, -214]. Оставьте в нем только отрицательные числа.


// 6. Вам дан массив [3, 51, 30, 54, 60]. Оставьте в нем только четные числа.
// let arr = [3, 51, 30, 54, 60]
// console.log(arr.map((el) => {
//     return el % 2 === 0 
// }));


// 7. Вам дан массив ['Бегимай', 'Баяман', 'Калмамат']. Оставьте в нем только те строки, длина которых больше 5-ти символов.
// let arr = 
// 8. Вам дан массив [-13, 96, -41, -28, 40]. Посчитайте количество отрицательных чисел в этом массиве.
// let arr = [-13, 96, -41, -28, 40]
// console.log(arr.map((idx) => {
// return 
// }));

// 9. Вам дан массив [3, 51, -30, -54, 60]. Оставьте в нем только положительные числа. Затем извлеките квадратный корень из этих чисел, если эти числа больше 30.
// 11. Вам дан массив [NaN, 0, 77, false, -17, '',undefined, 99, null]. Создайте функцию, которая очищает массив от ложных (false) значений: false, null, undefined, 0, –0, NaN и "" (пустая строка).
// 12. Вам дан массив ['Бегимай', 'Баяман', 'Калмамат']. Выведите длину каждой строки.